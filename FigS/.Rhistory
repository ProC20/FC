geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 0.8))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("Relative mRNA expression (%16S rRNA)") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
df <- read.table(file='jiyincu.txt',header=T,row.names=1,sep="\t")
mean <- aggregate(df$value, by=list(df$ID, df$group), FUN=mean)
sd <- aggregate(df$value, by=list(df$ID, df$group), FUN=sd)
###计算3种鸢尾花的个数
len <- aggregate(df$value, by=list(df$ID, df$group), FUN=length)
##合并均值和标准差为数据格式
df_res <- data.frame(mean, sd=sd$x, len=len$x)
##为合并好的数据命名列名
colnames(df_res) = c("ID", "group", "Mean", "Sd", "Count")
##查看合并并命名后的数据
df_res
###计算3种鸢尾花的标准误se=sd/sqrt(n)
df_res$Se <- df_res$Sd/sqrt(df_res$Count)
#######绘图#########
##########用SE(标准误差/标准误)进行作图###########
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 0.8))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("Relative mRNA expression (%16S rRNA)") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
#######绘图#########
##########用SE(标准误差/标准误)进行作图###########
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 3))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("Relative mRNA expression (%16S rRNA)") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 3))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("log10 (Relative mRNA expression (%16S rRNA)*1000)") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
#######绘图#########
##########用SE(标准误差/标准误)进行作图###########
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 3.5))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("log10 (Relative mRNA expression (%16S rRNA)*1000)") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
#######绘图#########
##########用SE(标准误差/标准误)进行作图###########
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 3.5))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("log10 (Relative mRNA expression (%16S rRNA))") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
df$ID <- fct_inorder(df$ID)
mean <- aggregate(df$value, by=list(df$ID, df$group), FUN=mean)
sd <- aggregate(df$value, by=list(df$ID, df$group), FUN=sd)
###计算3种鸢尾花的个数
len <- aggregate(df$value, by=list(df$ID, df$group), FUN=length)
##合并均值和标准差为数据格式
df_res <- data.frame(mean, sd=sd$x, len=len$x)
##为合并好的数据命名列名
colnames(df_res) = c("ID", "group", "Mean", "Sd", "Count")
##查看合并并命名后的数据
df_res
###计算3种鸢尾花的标准误se=sd/sqrt(n)
df_res$Se <- df_res$Sd/sqrt(df_res$Count)
#######绘图#########
##########用SE(标准误差/标准误)进行作图###########
a<-ggplot(df_res, aes(x=ID, y=Mean, fill=group)) +
geom_errorbar(aes(ymin=Mean-Se, ymax=Mean +Se),
position=position_dodge(.8), width=.2)+
geom_bar(stat="identity", position=position_dodge(),
color="black", width=.8) +
theme_classic()+
scale_y_continuous(expand=c(0,0))+
coord_cartesian(ylim = c(0, 3.5))+
theme(axis.text.x = element_text(color = "black"))+##设置x轴字体大小
theme(axis.text.y = element_text(color = "black"))+##设置y轴字体大小
theme(axis.text.x = element_text(angle = -45, hjust = 0.5, vjust = 0.5),title=element_text())+
ylab("log10 (Relative mRNA expression (%16S rRNA))") + xlab(NULL)+
scale_fill_manual(values = c("#65a5cc","#7b9d53","#ece799","#2e3192","#8159a8","#96cb91","#ed1c24","#c6b599"))
a + X11(width=7,height=4)
setwd("C:/Users/zcc/Desktop/code and data")
library(ggplot2)
library(dplyr)
library(ggsignif)
mydata <- read.table("Frequency.txt",header = T,sep="\t",na.strings = "NA")
databar$treatment <- fct_inorder(databar$treatment)
g <- ggplot(mydata, aes(time, values, fill = time)) + facet_wrap(~treatment,scales="free",ncol=4) +
geom_point(shape = 21, size =2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
scale_fill_manual(values = c("grey","#1c689e")) +
scale_color_manual(values = c("grey","#1c689e")) +# 修改颜色
geom_line(data = filter(mydata, treatment == "Placebo"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "6M4"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
geom_line(data = filter(mydata, treatment == "8M1"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "L6"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
xlab(NULL) +        # 修改x轴的标签
ylab(NULL) + # 修改y轴的标签
theme_bw() +
geom_signif(comparisons = list(c("T0","T1")),
step_increase =0,
map_signif_level = T,
test = wilcox.test,
tip_length = 0)
g + x11(width =7,height = 3)
mydata <- read.table("Frequency.txt",header = T,sep="\t",na.strings = "NA")
databar$treatment <- fct_inorder(databar$treatment)
g <- ggplot(mydata, aes(time, values, fill = time)) + facet_wrap(~treatment,scales="free",ncol=4) +
geom_point(shape = 21, size =2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
scale_fill_manual(values = c("grey","#1c689e")) +
scale_color_manual(values = c("grey","#1c689e")) +# 修改颜色
geom_line(data = filter(mydata, treatment == "Placebo"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "6M4"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
geom_line(data = filter(mydata, treatment == "8M1"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "L6"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
xlab(NULL) +        # 修改x轴的标签
ylab(NULL) + # 修改y轴的标签
theme_bw() +
geom_signif(comparisons = list(c("T0","T1")),
step_increase =0,
map_signif_level = T,
test = wilcox.test,
tip_length = 0)
g + x11(width =7,height = 3)
mydata <- read.table("CCCS.txt",header = T,sep="\t",na.strings = "NA")
databar$treatment <- fct_inorder(databar$treatment)
g <- ggplot(mydata, aes(time, values, fill = time)) + facet_wrap(~treatment,scales="free",ncol=4) +
geom_point(shape = 21, size =2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
scale_fill_manual(values = c("grey","#1c689e")) +
scale_color_manual(values = c("grey","#1c689e")) +# 修改颜色
geom_line(data = filter(mydata, treatment == "Placebo"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "6M4"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
geom_line(data = filter(mydata, treatment == "8M1"), aes(group = ID),colour='gray') + # 添加疫苗组的点对点线条
geom_line(data = filter(mydata, treatment == "L6"), aes(group = ID),colour='gray') + # 添加安慰剂组的点对点线条
xlab(NULL) +        # 修改x轴的标签
ylab(NULL) + # 修改y轴的标签
theme_bw() +
geom_signif(comparisons = list(c("T0","T1")),
step_increase =0,
map_signif_level = T,
test = wilcox.test,
tip_length = 0)
g + x11(width =7,height = 3)
library(dplyr)
library(ggplot2)
library(ggpubr)
databar=read.csv(file='cluster_ppm.csv',header = T,stringsAsFactors = F)
e <- ggplot(databar, aes(x = Group1, y = Score,fill=Time)) +
geom_boxplot(aes(color = Time), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black") +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank(),outlier.shape=NA) +
theme_classic() + theme(panel.grid=element_blank()) + xlab(NULL) + ylab(NULL) +
scale_fill_manual(values = c("grey","#1c689e")) +
scale_color_manual(values = c("grey","#1c689e")) +
theme(text=element_text(size=16,  family="serif")) +
stat_compare_means(aes(group=Time), method = "wilcox.test",label="p.signif",label.y=c(4.1,4.1,4.1))+
geom_signif(annotations = c("","",""),
y_position = c(4.05,4.05,4.05),
xmin = c(0.8,1.8,2.8),
xmax = c(1.2,2.2,3.2),
tip_length = 0)
e + x11(width = 4,height = 3)
####图4 BCD####
library(ggplot2)
library(ggpubr)
library(forcats)
all <- read.table("bray_genecluster_bacteria.txt",header=T,row.names=1,sep="\t")
all$index <- fct_inorder(all$index)
all <- read.table("bray_genecluster_bacteria.txt",header=T,row.names=1,sep="\t")
all$index <- fct_inorder(all$index)
p<- ggplot(all,aes(x = bray_dist_genus,y= gene_cluster)) +
geom_smooth(method = "lm",colour="#0b0b09") +
facet_wrap(~index,scales="free") +
geom_point(size=2,aes(x = bray_dist_genus,y= gene_cluster),col = "#2e6b98")+
theme_bw() + theme(panel.grid=element_blank()) + stat_cor(method = "spearman") #+ scale_color_manual(values = c("#0e946a","#c45b2d","#1c689e"))#+
p + x11(width=9.5,height=3)
####图4E####
library(pheatmap)
library(RColorBrewer)
library(vegan)
library(ComplexHeatmap)
data <- read.table("L6_gene_strain_zenglaing_r.txt",header=T,row.names=1,sep="\t")
pheatmap(data,cluster_col = FALSE,border_size = 0.25,cluster_rows = FALSE,
show_colnames = T,color = colorRampPalette(c("navy", "white", "firebrick3"))(50))
databar <-read.table("ara_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +   facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono") + xlab(NULL) + ylab(NULL) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =7,height = 2.5)
####图2 8株菌mars otu####
databar <-read.table("mars_od_8bl.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
expand_limits( y = 0)+
theme_bw() + theme(panel.grid=element_blank()) +   #facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#b92429","#b92429","#b92429","#b92429","#b92429","#b92429","#b92429","#b92429")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#b92429","#b92429","#b92429")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono",axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) + xlab(NULL) + ylab(NULL) #+
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =3,height = 2.5)
df <- read.table("exp2_xin1.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =6.5,height = 5)
databar <-read.table("ara_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +   facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono") + xlab(NULL) + ylab(NULL) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =7,height = 2.5)
e + x11(width =7,height = 2.5)
df <- read.table("exp2_xin1.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =6.5,height = 5)
e + x11(width =6.5,height = 5)
df <- read.table("index_3.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =3.5,height = 2.5)
library(ggplot2)
library(ggpubr)
library(forcats)
library(ggsci)
compaired <- list(c("6M4_T0","6M4_T1"),c("8M1_T0","8M1_T1"),c("L6_T0","L6_T1"))#,c("L6_T0","6M4_T0"),c("8M1_T0","6M4_T0"),c("8M1_T0","L6_T0"))
df <- read.table(file='daixie7.txt',header=T,row.names=1,sep="\t")
df$index <- fct_inorder(df$index)
p11 <- ggplot(df, aes(x=group1, y=value2)) + geom_boxplot(aes(color = time),outlier.shape=NA)+theme_bw() + labs(title = "", y=" ", x = "") +
theme(panel.grid=element_blank(),legend.position = 'none' ,  axis.text.x = element_text(angle = 0)) +
facet_wrap(~index,scales="free",nrow = 2) +  geom_jitter(aes(colour = time),width = 0.2) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0) +
scale_color_manual(values = c("#6c6c6c","#5dabd3")) + scale_fill_manual(values = c("#CAB2D6","#b4b4b4"))
p11 + x11(width=8.27, height=4.5)
#
p12 <- ggplot(df, aes(x = group1, y = value2,fill=time)) +
geom_boxplot(aes(color = time), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape=NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 1.5, show.legend = F,position = position_jitterdodge(jitter.width = 0.3)) +  theme_bw() +
theme(panel.grid = element_blank(), legend.position = 'none',panel.background = element_blank(),axis.text.x = element_text(angle = 0,size =6)) +
facet_wrap(~index,scales="free",nrow = 2) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0) +
scale_fill_manual(values = c("grey","#1c689e")) +
scale_color_manual(values = c("grey","#1c689e"))
p12 + x11(width=8.27, height=4)
databar <-read.table("ara_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +   facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono") + xlab(NULL) + ylab(NULL) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =7,height = 2.5)
####mars_scfas####
databar <-read.table("mars_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
####mars_scfas####
databar <-read.table("mars_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +   facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono") + xlab(NULL) + ylab(NULL) #+
e + x11(width =5,height = 2.5)
e + x11(width =7,height = 2.5)
####图2 8株菌mars otu####
databar <-read.table("mars_od_8bl.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
expand_limits( y = 0)+
theme_bw() + theme(panel.grid=element_blank()) +   #facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#b92429","#b92429","#b92429","#b92429","#b92429","#b92429","#b92429","#b92429")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7","#b92429","#b92429","#b92429")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono",axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) + xlab(NULL) + ylab(NULL) #+
e + x11(width =3,height = 2.5)
df <- read.table("exp2_xin1.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35','#b82e35','#b82e35','#4363a7','#4363a7','#4363a7','#4363a7')) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =6.5,height = 5)
df <- read.table("index_3.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =3.5,height = 2.5)
####acetate_mars_bl_3####
databar <-read.table("acetate_mars_bl_3.txt",header=TRUE,sep="\t",row.names=1)
####acetate_mars_bl_3####
databar <-read.table("acetate_mars_bl_3.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +
scale_fill_manual(values = c("#b82e35","#b82e35","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#b82e35","#b82e35","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono",axis.text.x = element_text(angle = 45)) + xlab(NULL) + ylab(NULL) #+
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =1.5,height = 2.5)
e + x11(width =1.5,height = 2.5)
df <- read.table("index_3.txt",header = T,sep="\t",na.strings = "NA")
df <- read.table("index_3.txt",header = T,sep="\t",na.strings = "NA")
df$group <- fct_inorder(df$group)
compaired <- list(c("CTR","LOP"),c("LOP","S32"))
e <- ggplot(df, aes(y=value, x=group))+ facet_wrap(~index,scales="free") +
geom_bar(aes(fill=group), position=position_dodge(1),stat="summary",width=0.8,colour = "black") +
theme_classic() +
theme(legend.direction = "horizontal", legend.position = "none", axis.text.x = element_text(angle = 45)) +
xlab(NULL) + ylab(NULL) +
scale_y_continuous(expand = c(0,0))+
geom_jitter(data = df,  aes(fill=group, y=value, x=group),size = 2, shape = 21) +
stat_summary(fun.data = 'mean_sdl', geom = "errorbar", colour = "black", width = 0.2,position = position_dodge(1)) +
scale_fill_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
scale_color_manual(values = c("#cfd0d1","#6e6f72",'#b82e35','#b82e35',"#4363a7")) +
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =3.5,height = 2.5)
databar <-read.table("mars_scfas.txt",header=TRUE,sep="\t",row.names=1)
compaired <- list(c("A","B"),c("A","C"))
databar$group <- fct_inorder(databar$group)
e <- ggplot(databar, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape = NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.2)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_bw() + theme(panel.grid=element_blank()) +   facet_wrap(~index,scales="free") +
scale_fill_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7")) +
scale_color_manual(values = c("#6e6f72","#b82e35","#4363a7","#4363a7","#4363a7")) +
theme(text=element_text(size=16,  family="serif"),legend.position = "nono") + xlab(NULL) + ylab(NULL) #+
geom_signif(comparisons = compaired,step_increase = 0.1,map_signif_level = T,test = wilcox.test,tip_length=0)
e + x11(width =5,height = 2.5)
library(ggprism)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(forcats)
library(ggforce)
library(ggsignif)
library(ggsci)
df = read.csv(file='SCFAs_mice.csv',header = T,stringsAsFactors = F)
compaired <- list(c("CTRL","LOP"),c("LOP","PHE"),c("LOP","4M1"),c("LOP","70M6"),c("LOP","6M4"),c("LOP","39M4"),c("LOP","8M1"))
df$group <- fct_inorder(df$group)
e <- ggplot(df, aes(x = group, y = value,fill=group)) +
geom_boxplot(aes(color = group), width = 0.7, size = 0.5,position = position_dodge(0.8),colour = "black",outlier.shape=NA) +
geom_point(alpha = 0.6,colour = "black",shape = 21, size = 2, show.legend = F,position = position_jitterdodge(jitter.width = 0.3)) +
theme(panel.grid = element_blank(), panel.background = element_blank()) +
theme_classic() + theme(panel.grid=element_blank()) +
scale_fill_manual(values = c("#CAB2D6","#b4b4b4","#A6CEE3",'#fed68b', '#91a8d6', '#f48c84', '#d5d2e7', '#99d092')) +
scale_color_manual(values = c("#CAB2D6","#b4b4b4","#A6CEE3",'#fed68b', '#91a8d6', '#f48c84', '#d5d2e7', '#99d092')) +
theme(text=element_text(size=16,  family="serif")) + facet_wrap(~index,scales="free",ncol=2)  +
theme_classic2() +  labs(x="", y="") + theme(axis.text.x = element_text(angle = 0, hjust = 0.5, vjust = 0.5),legend.position="none")
geom_signif(comparisons = list(c("CTRL","LOP"),c("LOP","PHE"),c("LOP","8M1"),c("LOP","4M1"),c("LOP","70M6"),c("LOP","6M4"),c("LOP","39M4")),
step_increase =0.1,
map_signif_level = T,
test =wilcox.test,
tip_length =0)
e + x11(width = 8,height = 8.25)
library(ggpmisc)
library(ggplot2)
library(ggpubr)
all <- read.table("DEIERTA.txt",header=T,row.names=1,sep="\t")
p <- ggplot(all,aes(x = Delta_Cluster_abundance,y= Delta_Frequency)) +
geom_point(size=2,aes(x = Delta_Cluster_abundance,y= Delta_Frequency,fill = "#1c689e",colour ="#1c689e"))+ geom_smooth(method = "lm",colour="#0b0b09") +
theme_bw() + theme(panel.grid=element_blank(),legend.position ="none" ) + stat_cor(method = "spearman") + scale_color_manual(values = c("#1c689e"))#+
p + x11(width=3.5,height=2.5)
p + x11(width=3.5,height=2.5)
all <- read.table("BL_zengliang.txt",header=T,row.names=1,sep="\t")
p <- ggplot(all,aes(x = B_longum,y= clinical_index)) + facet_wrap(~group,scales="free") + xlab("") +  ylab("") +
geom_point(size=2,aes(x = B_longum,y= clinical_index,fill = "#1c689e",colour ="#1c689e"))+ geom_smooth(method = "lm",colour="#0b0b09") +
theme_bw() + theme(panel.grid=element_blank(),legend.position ="none" ) + stat_cor(method = "spearman") + scale_color_manual(values = c("#1c689e"))#+
p + x11(width=5,height=5)
library(DESeq2)
library(limma)
library(pasilla)
install.packages("pasilla")
BiocManager::install("pasilla")
library(pasilla)
